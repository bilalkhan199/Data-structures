//Assignment01 datastructures

#include<iostream>
using namespace std;

class Pointer
{
	int *current=NULL,*head=NULL,*tail=NULL,*temp=NULL;
	int *array=new int[5];
	int length1=0;

	public:
	Pointer()
	{
	head=array;
	current=head;
	tail=head;
	}


void add()
{
	int input;
	if (head==current)
	{
	for (int i=0;i<5;i++){
		cin>>input;
		*current=input;
		current=current+1;
		length1+=1;
		tail+=1;
				}	
	
	}
	current -= 1;
	tail -= 1;
	}
	

void get()
{
	cout<<" i am get function,i will tell where *current pointer* is pointing ";
	cout<< *current<<endl;

}

void length()
{
	int count=1;

	int *tempq=NULL;
	tempq=array;
	while(*tempq!=*tail)
	{
		tempq+=1;
		count++;
	}
	cout<<"Total length is: "<<count<<endl;
}

void update()
{
	int new_number,position;
	cout<<"What is the new number? ";
	cin>>new_number;
	
	*current=new_number;

	for (int i=0;i<5;i++)
	{
		cout<<array[i];
	}
}

void back()
{
	current=current-1;
	cout<<"Current Pointer moved back: "<<*current<<endl;

}

void next()
{
	current=current+1;
	cout<<"Pointer moved one value forward: "<<*current<<endl;
}

void start()
{
	current=head;
	cout<<"head:"<<*current<<endl;
}
void end()
{
	current=tail;
	cout<<"tail:"<<*current<<endl;
}

void remove()
{
		int del,flag=0;
		current=head;
		cout<<"enter value to delete:";
		cin>>del;
	
	for (int i=0;i<7;i++)
	{
		if (del==*current && length1 !=0)
		{
			//cout<<"found"<<endl;
			temp=current+1;
			*current=0;
			swap(*current,*temp);
			flag=1;
			del=0;
				
		}
		current+=1;
	}
}

void print()
{
	int *q=NULL;
	q=array;
	for (int i=0;i<5;i++)
	{
		cout<<"printing"<<*q<<endl;
		q+=1;
	}
}
};

int main()
{

	Pointer alpha;

	alpha.add();
	alpha.get();
	alpha.length();
	alpha.update();
	cout<<endl<<"showing after update"<<endl;
	alpha.print();
	alpha.back();
	alpha.next();
	alpha.start();
	alpha.end();
	alpha.remove();
	alpha.print();

}
